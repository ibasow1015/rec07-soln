{"ast":null,"code":"var _jsxFileName = \"/Users/isabelbasow/Desktop/17-214/new-rec07-gui/frontend/src/App.tsx\";\nimport Handlebars from \"handlebars\";\nimport { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar oldHref = \"http://localhost:3000\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: [{\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=2\"\n      }],\n      template: this.loadTemplate(),\n      instructions: \"It is Player 0's turn\"\n    };\n  }\n\n  loadTemplate() {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src === null || src === void 0 ? void 0 : src.innerHTML, {});\n  }\n\n  convertToCell(p) {\n    const newCells = [];\n\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      var c = {\n        text: p[\"cells\"][i][\"text\"],\n        clazz: p[\"cells\"][i][\"clazz\"],\n        link: p[\"cells\"][i][\"link\"]\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  setTurn() {\n    this.setState(state => {\n      return {\n        turn: state.turn + 1\n      };\n    });\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    this.setState({\n      cells: newCells\n    });\n  }\n\n  async play(url) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    this.setState({\n      cells: newCells\n    });\n  }\n\n  async switch() {\n    if (window.location.href === \"http://localhost:3000/newgame\" && oldHref !== window.location.href) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" && oldHref !== window.location.href) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    }\n  }\n\n  instructions() {\n    if (this.state.winner !== undefined) {\n      return \"The winner is: \" + this.state.winner;\n    }\n\n    return \"It is player \" + this.state.turn + \" turn\";\n  }\n\n  render() {\n    this.switch();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.template({\n            cells: this.state.cells,\n            instructions: \"test\"\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/isabelbasow/Desktop/17-214/new-rec07-gui/frontend/src/App.tsx"],"names":["Handlebars","Component","oldHref","App","constructor","props","state","cells","text","clazz","link","template","loadTemplate","instructions","src","document","getElementById","compile","innerHTML","convertToCell","p","newCells","i","length","c","push","setTurn","setState","turn","newGame","response","fetch","json","play","url","href","split","switch","window","location","winner","undefined","render","__html"],"mappings":"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","sourcesContent":["import Handlebars from \"handlebars\"\nimport { Component } from 'react'\nimport './App.css'\n\nvar oldHref = \"http://localhost:3000\"\n\ninterface Cell {\n  text: String;\n  clazz: String;\n  link: String;\n}\n\ninterface Cells {\n  cells: Array<Cell>,\n  template: HandlebarsTemplateDelegate<any>,\n  instructions: String\n}\n\ninterface Props {\n}\n\nclass App extends Component<Props, Cells> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      cells: [\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=2\" },\n      ],\n      template: this.loadTemplate(),\n      instructions: \"It is Player 0's turn\"\n    };\n  }\n\n  loadTemplate (): HandlebarsTemplateDelegate<any> {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src?.innerHTML, {});\n  }\n\n  convertToCell(p: any): Array<Cell> {\n    const newCells: Array<Cell> = [];\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      var c: Cell = {\n        text: p[\"cells\"][i][\"text\"],\n        clazz: p[\"cells\"][i][\"clazz\"],\n        link: p[\"cells\"][i][\"link\"],\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  setTurn() {\n    this.setState((state) => {\n      return {turn: state.turn + 1}\n    });\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    this.setState({ cells: newCells });\n  }\n\n  async play(url: String) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    this.setState({ cells: newCells })\n  }\n\n  async switch() {\n    if (\n      window.location.href === \"http://localhost:3000/newgame\" &&\n      oldHref !== window.location.href\n    ) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" &&\n      oldHref !== window.location.href\n    ) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    }\n  };\n\n  instructions(): String {\n    if (this.state.winner !== undefined) {\n      return \"The winner is: \" + this.state.winner\n    }\n    return \"It is player \" + this.state.turn + \" turn\"\n  }\n\n  render() {\n    this.switch()\n    return (\n      <div className=\"App\">\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.template({ cells: this.state.cells, instructions: \"test\" }),\n          }}\n        />\n      </div>\n    )\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}