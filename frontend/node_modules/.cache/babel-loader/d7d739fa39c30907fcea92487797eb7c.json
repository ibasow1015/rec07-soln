{"ast":null,"code":"var _jsxFileName = \"/Users/isabelbasow/Desktop/17-214/new-rec07-gui/frontend/src/App.tsx\";\nimport Handlebars from \"handlebars\";\nimport { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar oldHref = \"http://localhost:3000\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: [{\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=2\"\n      }],\n      template: this.loadTemplate(),\n      turn: \"0\",\n      winner: undefined\n    };\n  }\n\n  loadTemplate() {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src === null || src === void 0 ? void 0 : src.innerHTML, {});\n  }\n\n  convertToCell(p) {\n    const newCells = [];\n\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      var c = {\n        text: p[\"cells\"][i][\"text\"],\n        clazz: p[\"cells\"][i][\"clazz\"],\n        link: p[\"cells\"][i][\"link\"]\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  getWinner(p) {\n    if (p.hasOwnProperty(\"winner\")) {\n      return p[\"winner\"];\n    }\n\n    return undefined;\n  }\n\n  getTurn(t) {\n    console.log(t);\n\n    if (t === \"0\") {\n      console.log(\"HELLO\");\n      return \"1\";\n    }\n\n    console.log(\"FUCK\");\n    return \"0\";\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    this.setState({\n      cells: newCells\n    });\n  }\n\n  async play(url) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const winner = this.getWinner(json);\n    const turn = this.getTurn(this.state.turn);\n    console.log(\"TURN: \" + turn, \"WINNER: \" + winner);\n    this.setState({\n      cells: newCells,\n      turn: turn,\n      winner: winner\n    });\n  }\n\n  async switch() {\n    if (window.location.href === \"http://localhost:3000/newgame\" && oldHref !== window.location.href) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" && oldHref !== window.location.href) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    }\n  }\n\n  instructions() {\n    if (this.state.winner != undefined) {\n      return \"The winner is: \" + this.state.winner;\n    }\n\n    return \"It is player \" + this.state.turn + \" turn\";\n  }\n\n  render() {\n    this.switch();\n    var inst = this.instructions();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.template({\n            cells: this.state.cells,\n            instructions: inst\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/isabelbasow/Desktop/17-214/new-rec07-gui/frontend/src/App.tsx"],"names":["Handlebars","Component","oldHref","App","constructor","props","state","cells","text","clazz","link","template","loadTemplate","turn","winner","undefined","src","document","getElementById","compile","innerHTML","convertToCell","p","newCells","i","length","c","push","getWinner","hasOwnProperty","getTurn","t","console","log","newGame","response","fetch","json","setState","play","url","href","split","switch","window","location","instructions","render","inst","__html"],"mappings":"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","sourcesContent":["import Handlebars from \"handlebars\"\nimport { Component } from 'react'\nimport './App.css'\n\nvar oldHref = \"http://localhost:3000\"\n\ninterface Cell {\n  text: String;\n  clazz: String;\n  link: String;\n}\n\ninterface Cells {\n  cells: Array<Cell>,\n  template: HandlebarsTemplateDelegate<any>,\n  turn: String,\n  winner?: String\n}\n\ninterface Props {\n}\n\nclass App extends Component<Props, Cells> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      cells: [\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=2\" },\n      ],\n      template: this.loadTemplate(),\n      turn: \"0\",\n      winner: undefined\n    };\n  }\n\n  loadTemplate (): HandlebarsTemplateDelegate<any> {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src?.innerHTML, {});\n  }\n\n  convertToCell(p: any): Array<Cell> {\n    const newCells: Array<Cell> = [];\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      var c: Cell = {\n        text: p[\"cells\"][i][\"text\"],\n        clazz: p[\"cells\"][i][\"clazz\"],\n        link: p[\"cells\"][i][\"link\"],\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  getWinner(p: any): String | undefined {\n    if (p.hasOwnProperty(\"winner\")) {\n      return p[\"winner\"]\n    }\n    return undefined\n  }\n\n  getTurn(t: String): String {\n    console.log(t)\n    if (t === \"0\") {\n      console.log(\"HELLO\")\n      return \"1\"\n    }\n    console.log(\"FUCK\")\n    return \"0\"\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    this.setState({ cells: newCells });\n  }\n\n  async play(url: String) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const winner: String | undefined = this.getWinner(json);\n    const turn = this.getTurn(this.state.turn);\n    console.log(\"TURN: \" + turn, \"WINNER: \" + winner)\n    this.setState({ cells: newCells, turn: turn, winner: winner });\n  }\n\n  async switch() {\n    if (\n      window.location.href === \"http://localhost:3000/newgame\" &&\n      oldHref !== window.location.href\n    ) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" &&\n      oldHref !== window.location.href\n    ) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    }\n  };\n\n  instructions(): String {\n    if (this.state.winner != undefined) {\n      return \"The winner is: \" + this.state.winner\n    }\n    return \"It is player \" + this.state.turn + \" turn\"\n  }\n\n  render() {\n    this.switch();\n    var inst = this.instructions()\n    return (\n      <div className=\"App\">\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.template({ cells: this.state.cells, instructions: inst }),\n          }}\n        />\n      </div>\n    )\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}