{"ast":null,"code":"/* eslint-disable new-cap */\n'use strict';\n\nexports.__esModule = true;\nexports.print = print;\nexports.PrintVisitor = PrintVisitor; // istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _visitor = require('./visitor');\n\nvar _visitor2 = _interopRequireDefault(_visitor);\n\nfunction print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nfunction PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new _visitor2['default']();\n\nPrintVisitor.prototype.pad = function (string) {\n  var out = '';\n\n  for (var i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function (program) {\n  var out = '',\n      body = program.body,\n      i = undefined,\n      l = undefined;\n\n  if (program.blockParams) {\n    var blockParams = 'BLOCK PARAMS: [';\n\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function (mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.Decorator = function (mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function (block) {\n  var out = '';\n  out += this.pad((block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:');\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n\n    if (block.program) {\n      this.padding--;\n    }\n  }\n\n  this.padding--;\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function (partial) {\n  var content = 'PARTIAL:' + partial.name.original;\n\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.PartialBlockStatement = function (partial) {\n  var content = 'PARTIAL BLOCK:' + partial.name.original;\n\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function (content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function (comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function (sexpr) {\n  var params = sexpr.params,\n      paramStrings = [],\n      hash = undefined;\n\n  for (var i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function (id) {\n  var path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function (string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function (number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function (bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function () {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function () {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function (hash) {\n  var pairs = hash.pairs,\n      joinedPairs = [];\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\n\nPrintVisitor.prototype.HashPair = function (pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */","map":{"version":3,"sources":["/Users/isabelbasow/Desktop/17-214/new-rec07-gui/frontend/node_modules/handlebars/lib/handlebars/compiler/printer.js"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n    body = program.body,\n    i,\n    l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function(\n  block\n) {\n  let out = '';\n\n  out += this.pad(\n    (block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:'\n  );\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n    paramStrings = [],\n    hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n    joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n"]},"metadata":{},"sourceType":"script"}